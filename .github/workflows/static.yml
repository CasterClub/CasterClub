name: Deploy and Release GitHub Pages

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Pages
        uses: actions/configure-pages@v5

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          echo "Latest tag: $latest_tag"
          if [[ $latest_tag =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
            new_tag="v$major.$((minor+1)).0"
          else
            new_tag="v2.0.0"
          fi
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.new_tag }}
          name: "Website ${{ steps.get_tag.outputs.new_tag }}"
          body: |
            This release was auto-generated by the GitHub Actions deployment workflow.
            - Environment: ${{ github.ref_name }}
            - Page URL: ${{ steps.deployment.outputs.page_url }}
          files: README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
